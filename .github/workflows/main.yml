name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup Rust Toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Build (Release)
      run: cargo build --release --verbose
      
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        path: |
          target/release/RustF
          target/release/RustF.exe
        name: ${{ matrix.os }}-build
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Get tag
      id: get_tag
      run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_VERSION }}
        name: Release ${{ env.TAG_VERSION }}
        draft: false
        prerelease: false
        body: |
          ### New Features
          - (Write your release notes here)
          
          ### Bug Fixes
          - (Write your bug fixes here)
        files: |
          ./artifacts/ubuntu-latest-build/RustF
          ./artifacts/macos-latest-build/RustF
          ./artifacts/windows-latest-build/RustF.exe